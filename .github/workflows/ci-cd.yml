name: mastermind CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest

    env:
      ECR_URI: 644171555460.dkr.ecr.us-west-2.amazonaws.com/philipbrown/mastermind
      FRONTEND_BUCKET: mastermind-frontend-webapp
      CLOUDFRONT_DISTRIBUTION_ID: E39SHS60J21HOH

    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install root dependencies
        run: npm ci

        # Build & Test Backend
      - name: Install & Build Backend
        working-directory: ./backend
        run: |
          npm ci
          npm run lint
          npm run build

      # (Optionally run tests here if you have them)
      # - name: Run Tests (Backend)
      #   working-directory: ./backend
      #   run: npm run test

      # Build & Test Frontend
      - name: Install & Build Frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run lint
          npm run build

      # (Optionally run tests here if you have them)
      # - name: Run Tests (Frontend)
      #   working-directory: ./frontend
      #   run: npm run test
      
      # Configure AWS & Push Images to ECR
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-west-2'

      # ECR Login and Backend Container Push
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Backend Image
        run: |
          docker build -t mastermind-backend:latest ./backend
          docker tag mastermind-backend:latest ${{ env.ECR_URI }}:mastermind-backend
          docker push ${{ env.ECR_URI }}:mastermind-backend

      # S3 Frontend Deployment
      - name: Deploy Frontend to S3
        run: |
          aws s3 sync ./frontend/build s3://${{ env.FRONTEND_BUCKET }} --delete

      # CloudFront Cache Invalidation
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"